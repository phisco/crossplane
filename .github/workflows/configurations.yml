name: Configurations

on:
  push:
  workflow_dispatch: {}

env:
  DOCKER_USR: ${{ secrets.UPBOUND_XP_ROBOT_USR }}
  # Common versions
  GO_VERSION: '1.21.2'

jobs:
  setup:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4
        with:
          submodules: true
          fetch-depth: 0
      # The tagger step uses the same logic in the build submodule to generate package tag
      # https://github.com/upbound/build/blob/4f64913157a952dbe77cd9e05457d9abe695a1d4/makelib/common.mk#L193
      - name: Set tag
        run: echo "VERSION_TAG=$(git describe --dirty --always --tags | sed 's/-/./2' | sed 's/-/./2' )" >> $GITHUB_OUTPUT
        id: tagger

  build-crossplane-cli:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe # v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Vendor Dependencies
        run: make vendor vendor.check

      - name: Build Artifacts
        run: make -j2 go.build
      
      - name: Upload crossplane cli
        uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3
        with:
          path: _output/bin/linux_amd64/crank
          name: crossplane-cli


  build-and-push-configurations:
    runs-on: ubuntu-22.04
    needs: [ setup, build-crossplane-cli ]
    strategy:
      fail-fast: false
      matrix:
        configurations:
          - { "name": "getting-started-with-aws", "path": "cluster/packages/aws/getting-started-aws.xpkg" }
          - { "name": "getting-started-with-aws-with-vpc", "path": "cluster/packages/aws-with-vpc/getting-started-with-aws-with-vpc.xpkg" }
          - { "name": "getting-started-with-gcp", "path": "cluster/packages/gcp/getting-started-with-gcp.xpkg" }
          - { "name": "getting-started-with-azure", "path": "cluster/packages/azure/getting-started-with-gcp.xpkg" }

    steps:
      - name: Checkout
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4
        with:
          submodules: true
          fetch-depth: 0

      - uses: actions/download-artifact@v2
        with:
          name: crossplane-cli
          path: crank

      - name: Login to Docker
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3
        if: env.DOCKER_USR != ''
        with:
          registry: registry.upbound.io
          username: ${{ secrets.UPBOUND_XP_ROBOT_USR }}
          password: ${{ secrets.UPBOUND_XP_ROBOT_PSW }}


      - name: Build
        run: crank build configuration -f $(dirname ${{ matrix.path }}) --name=$(basename ${{ matrix.path }})

      - name: Push
        uses: crossplane-contrib/xpkg-action@1696d9091687aad2895436cb5656faa956628b0f # v0.2.0
        with:
          command: push configuration -f ${{ matrix.path }} registry.upbound.io/xp/${{ matrix.name }}:${{ needs.setup.outputs.VERSION_TAG }}
